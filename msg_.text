def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))
def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))
def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))
def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))
def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2) - POSITIVE_CONST,
        string_spliter(samples, sample_size)
))def parse_samples_stream(samples, sample_size):
    return list(map(
        lambda s:
            int('0b' + s, 2)
